syntax = "proto3";

package permission;

option go_package = "kurbanov.sso.v1;ssov1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "sso/sso.role.proto";

service Role {
    rpc CreateRole (CreateRoleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/role/create"
            body: "*"
        };
    }
    rpc DeleteRole (DeleteRoleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/role/delete"
            body: "*"
        };
    }
    rpc Role (RoleRequest) returns (RoleResponse) {
        option (google.api.http) = {
            get: "/role"
        };
    }
    rpc RoleByID (RoleByIdRequest) returns (RoleResponse) {
        option (google.api.http) = {
            post: "/role"
            body: "*"
        };
    }
    rpc Roles (google.protobuf.Empty) returns (RolesResponse) {
        option (google.api.http) = {
            get: "/roles"
        };
    } 
    rpc RolesByID (RolesByIdRequest) returns (RolesResponse) {
        option (google.api.http) = {
            post: "/roles"
            body: "*"
        };
    } 
}

message CreateRoleRequest {
    string name    = 1;
    string object  = 2;
    string actions = 3;
}

message DeleteRoleRequest {
    string name = 1;
}

message RoleRequest {
    string name = 1;
}

message RoleResponse {
    role.Role role = 1;
}

message RoleByIdRequest {
    int64 appID = 1;
    string name = 2;
}

message RolesByIdRequest {
    int64 appID = 1;
}

message RolesResponse {
    repeated role.Role roles = 1;
}



service Permission {
    rpc BanUser (UserPermissionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/ban/user"
            body: "*"
        };
    }
    rpc UnbanUser (UserPermissionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/unban/user"
            body: "*"
        };
    }
    rpc BanApp (AppPermissionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/ban/app"
            body: "*"
        };
    }
    rpc UnbanApp (AppPermissionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/unban/app"
            body: "*"
        };
    }
}

message UserPermissionRequest {
    int64 userID = 1;
}

message AppPermissionRequest {
    int64 appID = 1;
}